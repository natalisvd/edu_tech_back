// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName String?
  lastName  String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  roles     Role[]
  token     Token[]
  avatarUlr String?
  skills    Skill[]

  @@map("users")
}

enum Role {
  ADMIN
  DEVELOPER
  DESIGNER
  TEAMLEADER
  MANAGER
}

model Token {
  token     String   @unique
  exp       DateTime
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  userAgent String   @map("user_agent")

  @@map("tokens")
}

model Course {
  id          String @id @default(uuid())
  name        String
  description String
  courseUrl   String

  @@map("courses")
}

model Skill {
  id                    String               @id @default(uuid())
  description           String
  isConfirmed           Boolean              @default(false)
  SkillTestingTemplate  SkillTestingTemplate @relation(fields: [skillTestingTempateId], references: [id])
  User                  User?                @relation(fields: [userId], references: [id])
  userId                String?
  skillTestingTempateId String

  @@map("skills")
}

model SkillTestingTemplate {
  id            String         @id @default(uuid())
  skillId       String
  tests         Test[]
  textQuestions TextQuestion[]
  Skill         Skill[]

  @@map("skills_testing")
}

model Test {
  id                  String                @id @default(uuid())
  quetion             String
  answer1             String
  answer2             String
  answer3             String
  answer4             String
  correctAnswerNumber Int
  SkillTesting        SkillTestingTemplate? @relation(fields: [skillTestingId], references: [id])
  skillTestingId      String?

  @@map("tests")
}

model TextQuestion {
  id             String                @id @default(uuid())
  question       String
  SkillTesting   SkillTestingTemplate? @relation(fields: [skillTestingId], references: [id])
  skillTestingId String?

  @@map("text_questions")
}

model TextQuestionAnswers {
  id     String @id @default(uuid())
  answer String

  @@map("text_question_answers")
}
